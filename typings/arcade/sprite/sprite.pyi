from typing import Any
from arcade import Texture
from arcade.hitbox import HitBox, RotatableHitBox
from arcade.types import PathOrTexture, Point2
from arcade.gl.types import BlendFunction, OpenGlFilter
from .base import BasicSprite
from .mixins import PymunkMixin

__all__ = ["Sprite"]
class Sprite(BasicSprite, PymunkMixin):
    __slots__ = ...
    def __init__(self, path_or_texture: PathOrTexture | None = ..., scale: float = ..., center_x: float = ..., center_y: float = ..., angle: float = ..., **kwargs: Any) -> None: ...
    @property
    def angle(self) -> float: ...
    @angle.setter
    def angle(self, new_value: float) -> None: ...
    @property
    def radians(self) -> float: ...
    @radians.setter
    def radians(self, new_value: float) -> None: ...
    @property
    def velocity(self) -> Point2: ...
    @velocity.setter
    def velocity(self, new_value: Point2) -> None: ...
    @property
    def change_x(self) -> float: ...
    @change_x.setter
    def change_x(self, new_value: float) -> None: ...
    @property
    def change_y(self) -> float: ...
    @change_y.setter
    def change_y(self, new_value: float) -> None: ...
    @property
    def hit_box(self) -> HitBox: ...
    @hit_box.setter
    def hit_box(self, hit_box: HitBox | RotatableHitBox) -> None: ...
    @property
    def texture(self) -> Texture: ...
    @texture.setter
    def texture(self, texture: Texture) -> None: ...
    @property
    def properties(self) -> dict[str, Any]: ...
    @properties.setter
    def properties(self, value: dict[str, Any]) -> None: ...
    def forward(self, speed: float = ...) -> None: ...
    def reverse(self, speed: float = ...) -> None: ...
    def strafe(self, speed: float = ...) -> None: ...
    def turn_right(self, theta: float = ...) -> None: ...
    def turn_left(self, theta: float = ...) -> None: ...
    def stop(self) -> None: ...
    def draw(self, *, filter: OpenGlFilter | None = ..., pixelated: bool | None = ..., blend_function: BlendFunction | None = ...) -> None: ...
    def update(self) -> None: ...
    def update_spatial_hash(self) -> None: ...
    def append_texture(self, texture: Texture) -> None: ...
    def set_texture(self, texture_no: int) -> None: ...
    def remove_from_sprite_lists(self) -> None: ...
    def register_physics_engine(self, physics_engine: Any) -> None: ...
    def sync_hit_box_to_texture(self) -> None: ...
