"""
This type stub file was generated by pyright.
"""

from typing import List, Optional, Union
from arcade.gui import UIEvent
from arcade.gui.events import UIOnChangeEvent
from arcade.gui.ui_manager import UIManager
from arcade.gui.widgets import UILayout
from arcade.gui.widgets.layout import UIBoxLayout

class _UIDropdownOverlay(UIBoxLayout):
    """
    Represents the dropdown options overlay.

    Currently only handles closing the overlay when clicked outside of the options.
    """
    def show(self, manager: UIManager): # -> None:
        ...
    
    def hide(self): # -> None:
        """Hide the overlay."""
        ...
    
    def on_event(self, event: UIEvent) -> Optional[bool]:
        ...
    


class UIDropdown(UILayout):
    """
    A dropdown layout. When clicked displays a list of options provided.

    Triggers an event when an option is clicked, the event can be read by

    .. code:: py

        dropdown = Dropdown()

        @dropdown.event()
        def on_change(event: UIOnChangeEvent):
            print(event.old_value, event.new_value)

    :param x: x coordinate of bottom left
    :param y: y coordinate of bottom left
    :param width: Width of each of the option.
    :param height: Height of each of the option.
    :param default: The default value shown.
    :param options: The options displayed when the layout is clicked.
    :param style: Used to style the dropdown.
    """
    DIVIDER = ...
    def __init__(self, *, x: float = ..., y: float = ..., width: float = ..., height: float = ..., default: Optional[str] = ..., options: Optional[List[Union[str, None]]] = ..., style=..., **kwargs) -> None:
        ...
    
    @property
    def value(self) -> Optional[str]:
        """Current selected option."""
        ...
    
    @value.setter
    def value(self, value: Optional[str]): # -> None:
        """Change the current selected option to a new option."""
        ...
    
    def do_layout(self): # -> None:
        ...
    
    def on_change(self, event: UIOnChangeEvent): # -> None:
        """To be implemented by the user, triggered when the current selected value is changed to a different option."""
        ...
    


