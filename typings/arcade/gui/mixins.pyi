"""
This type stub file was generated by pyright.
"""

from typing import Optional
from arcade.gui.widgets import UILayout, UIWidget

class UIDraggableMixin(UILayout):
    """
    UIDraggableMixin can be used to make any :class:`UIWidget` draggable.

    Example, create a draggable Frame, with a background, useful for window like constructs:

        class DraggablePane(UITexturePane, UIDraggableMixin):
            ...

    This does overwrite :class:`UILayout` behaviour which position themselves, like :class:`UIAnchorWidget`

    """
    def do_layout(self): # -> None:
        ...
    
    def on_event(self, event) -> Optional[bool]:
        ...
    


class UIMouseFilterMixin(UIWidget):
    """
    :class:`UIMouseFilterMixin` can be used to catch all mouse events which occur inside this widget.

    Useful for window like widgets, :class:`UIMouseEvents` should not trigger effects which are under the widget.
    """
    def on_event(self, event) -> Optional[bool]:
        ...
    


class UIWindowLikeMixin(UIMouseFilterMixin, UIDraggableMixin, UIWidget):
    """
    Makes a widget window like:

    - handles all mouse events that occur within the widgets boundaries
    - can be dragged
    """
    ...


