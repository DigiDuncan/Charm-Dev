"""
This type stub file was generated by pyright.
"""

from __future__ import annotations
from PIL.Image import Image
from arcade.types import Point2List
from .base import HitBox, HitBoxAlgorithm, RotatableHitBox
from .bounding_box import BoundingHitBoxAlgorithm
from .pymunk import PymunkHitBoxAlgorithm
from .simple import SimpleHitBoxAlgorithm

algo_simple = ...
algo_detailed = ...
algo_bounding_box = ...
algo_default = ...
def calculate_hit_box_points_simple(image: Image, *args) -> Point2List:
    """
    Given an RGBA image, this returns points that make up a hit box around it. Attempts
    to trim out transparent pixels.

    :param image: Image get hit box from.

    :Returns: List of points
    """
    ...

def calculate_hit_box_points_detailed(image: Image, hit_box_detail: float = ...) -> Point2List:
    """
    Given an RGBA image, this returns points that make up a hit box around it. Attempts
    to trim out transparent pixels.

    :param image: Image get hit box from.
    :param hit_box_detail: How detailed to make the hit box. There's a
                               trade-off in number of points vs. accuracy.

    :Returns: List of points
    """
    ...

__all__ = ["HitBoxAlgorithm", "HitBox", "RotatableHitBox", "SimpleHitBoxAlgorithm", "PymunkHitBoxAlgorithm", "BoundingHitBoxAlgorithm", "algo_simple", "algo_detailed", "algo_bounding_box", "algo_default", "calculate_hit_box_points_simple", "calculate_hit_box_points_detailed"]
