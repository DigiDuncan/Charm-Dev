"""
This type stub file was generated by pyright.
"""

from typing import Sequence, Tuple, Union
from pyglet.math import Vec2, Vec3
from arcade.types.numbers import AsFloat

"""Points, sizes, and other similar aliases.

This is a submodule of :py:mod:`arcade.types` to avoid issues with:

* Circular imports
* Partially initialized modules

"""
Point2 = Union[Tuple[AsFloat, AsFloat], Vec2]
Point3 = Union[Tuple[AsFloat, AsFloat, AsFloat], Vec3]
Point = Union[Point2, Point3]
PointList = Sequence[Point]
Point2List = Sequence[Point2]
Point3List = Sequence[Point3]
EMPTY_POINT_LIST: Point2List = ...
class AnchorPoint:
    """Common anchor points as constants in UV space.

    Each is a :py:class:`~pyglet.math.Vec2` with axis values between
    ``0.0`` and ``1.0``. They can be used as arguments to
    :py:meth:`Rect.uv_to_position <arcade.types.Rect.uv_to_position>`
    to help calculate:

    * a pixel offset inside a :py:class:`~arcade.types.Rect`
    * an absolute screen positions in pixels

    Advanced users may also find them useful when working with
    shaders.
    """
    BOTTOM_LEFT = ...
    BOTTOM_CENTER = ...
    BOTTOM_RIGHT = ...
    CENTER_LEFT = ...
    CENTER = ...
    CENTER_RIGHT = ...
    TOP_LEFT = ...
    TOP_CENTER = ...
    TOP_RIGHT = ...


__all__ = ['Point2', 'Point3', 'Point', 'Point2List', 'Point3List', 'PointList', 'AnchorPoint', 'EMPTY_POINT_LIST']
