"""
This type stub file was generated by pyright.
"""

import arcade
from pathlib import Path
from typing import Optional, Tuple, Union

"""
Experimental video player using pyglet.

This requires that you have ffmpeg installed
and you might need to tell pyglet where it's located.
"""
class VideoPlayer:
    """
    Primitive video player for arcade.

    :param path: Path of the video that is to be played.
    :param loop: Pass `True` to make the video loop.
    """
    def __init__(self, path: Union[str, Path], loop: bool = ...) -> None:
        ...
    
    def draw(self, left: int = ..., bottom: int = ..., size: Optional[Tuple[int, int]] = ...) -> None:
        """
        Call this in `on_draw`.

        :param size: Pass None as one of the elements if you want to use the dimension(width, height) attribute.
        """
        ...
    
    @property
    def width(self) -> int:
        """Video width."""
        ...
    
    @property
    def height(self) -> int:
        """Video height."""
        ...
    
    def get_video_size(self) -> Tuple[int, int]:
        ...
    


class VideoPlayerView(arcade.View):
    def __init__(self, path: Union[str, Path]) -> None:
        ...
    
    def on_draw(self) -> None:
        ...
    


if __name__ == '__main__':
    window = ...
