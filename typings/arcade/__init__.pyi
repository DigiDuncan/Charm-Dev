"""
This type stub file was generated by pyright.
"""

import sys
import os
import pyglet
from __future__ import annotations
from typing import Optional
from pathlib import Path
from arcade import camera as camera, color as color, csscolor as csscolor, experimental as experimental, hitbox as hitbox, key as key, math as math, resources as resources, shape_list as shape_list, types as types, utils
from .drawing_support import get_points_for_thick_line
from .window_commands import close_window, exit, finish_render, get_display_size, get_window, run, schedule, schedule_once, set_background_color, set_window, start_render, unschedule
from .sections import Section, SectionManager
from .application import MOUSE_BUTTON_LEFT, MOUSE_BUTTON_MIDDLE, MOUSE_BUTTON_RIGHT, NoOpenGLException, View, Window, get_screens, open_window
from .texture import SpriteSheet, Texture, TextureManager, cleanup_texture_cache, get_default_image, get_default_texture, load_spritesheet, load_texture, load_texture_pair, load_textures, make_circle_texture, make_soft_circle_texture, make_soft_square_texture
from .draw_commands import draw_arc_filled, draw_arc_outline, draw_circle_filled, draw_circle_outline, draw_ellipse_filled, draw_ellipse_outline, draw_lbwh_rectangle_filled, draw_lbwh_rectangle_outline, draw_lbwh_rectangle_textured, draw_line, draw_line_strip, draw_lines, draw_lrbt_rectangle_filled, draw_lrbt_rectangle_outline, draw_parabola_filled, draw_parabola_outline, draw_point, draw_points, draw_polygon_filled, draw_polygon_outline, draw_rect_filled, draw_rect_filled_kwargs, draw_rect_outline, draw_rect_outline_kwargs, draw_scaled_texture_rectangle, draw_texture_rectangle, draw_triangle_filled, draw_triangle_outline, get_image, get_pixel
from .joysticks import get_game_controllers, get_joysticks
from .controller import ControllerManager, get_controllers
from .sound import Sound, load_sound, play_sound, stop_sound
from .sprite import AnimatedWalkingSprite, BasicSprite, FACE_DOWN, FACE_LEFT, FACE_RIGHT, FACE_UP, PyMunk, PymunkMixin, Sprite, SpriteCircle, SpriteSolidColor, SpriteType, TextureAnimation, TextureAnimationSprite, TextureKeyframe, load_animated_gif
from .sprite_list import SpatialHash, SpriteList, check_for_collision, check_for_collision_with_list, check_for_collision_with_lists, get_closest_sprite, get_distance_between_sprites, get_sprites_at_exact_point, get_sprites_at_point, get_sprites_in_rect
from .scene import Scene, SceneKeyError
from .physics_engines import PhysicsEnginePlatformer, PhysicsEngineSimple
from .tilemap import TileMap, load_tilemap, read_tmx
from .pymunk_physics_engine import PymunkException, PymunkPhysicsEngine, PymunkPhysicsObject
from .version import VERSION
from .paths import AStarBarrierList, astar_calculate_path, has_line_of_sight
from .context import ArcadeContext
from .texture_atlas import TextureAtlas
from .perf_info import clear_timings, disable_timings, enable_timings, get_fps, get_timings, print_timings, timings_enabled
from .perf_graph import PerfGraph
from .camera import Camera2D
from .types.rect import LBWH, LRBT, Rect, XYWH
from arcade.types import rect
from pyglet.math import Vec2, Vec3, Vec4
from .text import Text, create_text_sprite, draw_text, load_font

"""
The Arcade Library

A Python simple, easy to use module for creating 2D games.
"""
if sys.version_info[0] < 3 or (sys.version_info[0] == 3 and sys.version_info[1] < 7):
    ...
def configure_logging(level: Optional[int] = ...): # -> None:
    """Set up basic logging.
    :param level: The log level. Defaults to DEBUG.
    """
    ...

lib_location = ...
lib_location = ...
if sys.platform == "darwin" or sys.platform.startswith("linux"):
    ...
else:
    ...
if os.environ.get('ARCADE_HEADLESS'):
    ...
if sys.platform == "darwin" or os.environ.get('ARCADE_HEADLESS') or utils.is_raspberry_pi():
    ...
if not pyglet.options["headless"]:
    ...
__all__ = ['AStarBarrierList', 'AnimatedWalkingSprite', 'TextureAnimationSprite', 'TextureAnimation', 'TextureKeyframe', 'ArcadeContext', 'ControllerManager', 'FACE_DOWN', 'FACE_LEFT', 'FACE_RIGHT', 'FACE_UP', 'MOUSE_BUTTON_LEFT', 'MOUSE_BUTTON_MIDDLE', 'MOUSE_BUTTON_RIGHT', 'NoOpenGLException', 'PerfGraph', 'PhysicsEnginePlatformer', 'PhysicsEngineSimple', 'PyMunk', 'PymunkException', 'PymunkPhysicsEngine', 'PymunkPhysicsObject', 'Rect', 'LBWH', 'LRBT', 'XYWH', 'Section', 'SectionManager', 'Scene', 'SceneKeyError', 'Sound', 'BasicSprite', 'Sprite', 'SpriteType', 'PymunkMixin', 'SpriteCircle', 'SpriteList', 'SpriteSolidColor', 'Text', 'Texture', 'TextureManager', 'SpriteSheet', 'TextureAtlas', 'TileMap', 'VERSION', 'Vec2', 'Vec3', 'Vec4', 'View', 'Window', 'astar_calculate_path', 'check_for_collision', 'check_for_collision_with_list', 'check_for_collision_with_lists', 'close_window', 'disable_timings', 'draw_arc_filled', 'draw_arc_outline', 'draw_circle_filled', 'draw_circle_outline', 'draw_ellipse_filled', 'draw_ellipse_outline', 'draw_line', 'draw_line_strip', 'draw_lines', 'draw_lbwh_rectangle_textured', 'draw_lrbt_rectangle_filled', 'draw_lrbt_rectangle_filled', 'draw_lrbt_rectangle_outline', 'draw_lrbt_rectangle_outline', 'draw_parabola_filled', 'draw_parabola_outline', 'draw_point', 'draw_points', 'draw_polygon_filled', 'draw_polygon_outline', 'draw_rect_filled', 'draw_rect_outline', 'draw_scaled_texture_rectangle', 'draw_text', 'draw_texture_rectangle', 'draw_triangle_filled', 'draw_triangle_outline', 'draw_lbwh_rectangle_filled', 'draw_lbwh_rectangle_outline', 'draw_rect_outline_kwargs', 'draw_rect_filled_kwargs', 'enable_timings', 'exit', 'finish_render', 'get_closest_sprite', 'get_display_size', 'get_distance_between_sprites', 'get_sprites_in_rect', 'get_controllers', 'get_game_controllers', 'get_image', 'get_joysticks', 'get_pixel', 'get_points_for_thick_line', 'get_screens', 'get_sprites_at_exact_point', 'get_sprites_at_point', 'SpatialHash', 'get_timings', 'create_text_sprite', 'clear_timings', 'get_window', 'get_fps', 'has_line_of_sight', 'load_animated_gif', 'load_font', 'load_sound', 'load_spritesheet', 'load_texture', 'load_texture_pair', 'load_textures', 'make_circle_texture', 'make_soft_circle_texture', 'make_soft_square_texture', 'open_window', 'print_timings', 'play_sound', 'read_tmx', 'load_tilemap', 'run', 'schedule', 'set_background_color', 'set_window', 'start_render', 'stop_sound', 'timings_enabled', 'unschedule', 'schedule_once', 'cleanup_texture_cache', 'get_default_texture', 'get_default_image', 'hitbox', 'experimental', 'rect', 'color', 'csscolor', 'key', 'resources', 'types', 'math', 'shape_list', 'Camera2D']
__version__ = ...
if not getattr(sys, 'is_pyglet_doc_run', False):
    ...
