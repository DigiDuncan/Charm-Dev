"""
This type stub file was generated by pyright.
"""

from typing import Optional
from arcade.types import RGBA255
from arcade.hitbox import HitBoxAlgorithm
from .texture import Texture

LOG = ...
def make_circle_texture(diameter: int, color: RGBA255, name: Optional[str] = ..., hitbox_algorithm: Optional[HitBoxAlgorithm] = ...) -> Texture:
    """
    Return a Texture of a circle with the given diameter and color.

    :param diameter: Diameter of the circle and dimensions of the square :class:`Texture` returned.
    :param color: Color of the circle as a
        :py:class:`~arcade.types.Color` instance a 3 or 4 tuple.
    :param name: Custom or pre-chosen name for this texture

    :returns: New :class:`Texture` object.
    """
    ...

def make_soft_circle_texture(diameter: int, color: RGBA255, center_alpha: int = ..., outer_alpha: int = ..., name: Optional[str] = ..., hit_box_algorithm: Optional[HitBoxAlgorithm] = ...) -> Texture:
    """
    Return a :class:`Texture` of a circle with the given diameter and color, fading out at its edges.

    :param diameter: Diameter of the circle and dimensions of the square :class:`Texture` returned.
    :param color: Color of the circle as a 4-length tuple or
        :py:class:`~arcade.types.Color` instance.
    :param center_alpha: Alpha value of the circle at its center.
    :param outer_alpha: Alpha value of the circle at its edges.
    :param name: Custom or pre-chosen name for this texture
    :param hit_box_algorithm: The hit box algorithm

    :returns: New :class:`Texture` object.
    """
    ...

def make_soft_square_texture(size: int, color: RGBA255, center_alpha: int = ..., outer_alpha: int = ..., name: Optional[str] = ...) -> Texture:
    """
    Return a :class:`Texture` of a square with the given diameter and color, fading out at its edges.

    :param size: Diameter of the square and dimensions of the square Texture returned.
    :param color: Color of the square.
    :param center_alpha: Alpha value of the square at its center.
    :param outer_alpha: Alpha value of the square at its edges.
    :param name: Custom or pre-chosen name for this texture

    :returns: New :class:`Texture` object.
    """
    ...

