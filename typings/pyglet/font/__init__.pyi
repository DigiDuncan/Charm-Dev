"""
This type stub file was generated by pyright.
"""

import os
import sys
import weakref
import pyglet
from typing import BinaryIO, Iterable, Optional, Union
from pyglet.font.user import UserDefinedFontBase
from pyglet import gl

"""Load fonts.

pyglet will automatically load any system-installed fonts.  You can add additional fonts
(for example, from your program resources) using :meth:`add_file` or
:meth:`add_directory`. These fonts are then available in the same way as system-installed fonts::

    from pyglet import font
    font.add_file('action_man.ttf')
    action_man = font.load('Action Man', 16)
    # or
    from pyglet import resource
    resource.add_font('action_man.ttf')
    action_man = font.load('Action Man')

See the :mod:`pyglet.font.base` module for documentation on the base classes used
by this package.
"""
def add_user_font(font: UserDefinedFontBase): # -> None:
    """Add a custom font created by the user.

    A strong reference needs to be applied to the font object,
    otherwise pyglet may not find the font later.

    :Parameters:
        `font` : `~pyglet.font.user.UserDefinedFont`
            A font class instance defined by user.
    """
    ...

def have_font(name: str) -> bool:
    """Check if specified system font name is available."""
    ...

def load(name: Optional[Union[str, Iterable[str]]] = ..., size: Optional[float] = ..., bold: bool = ..., italic: bool = ..., stretch: bool = ..., dpi: Optional[float] = ...): # -> GDIPlusFont | FreeTypeFont | QuartzFont | Win32DirectWriteFont:
    """Load a font for rendering.

    :Parameters:
        `name` : str, or list of str
            Font family, for example, "Times New Roman".  If a list of names
            is provided, the first one matching a known font is used.  If no
            font can be matched to the name(s), a default font is used.  In
            pyglet 1.1, the name may be omitted.
        `size` : float
            Size of the font, in points.  The returned font may be an exact
            match or the closest available.
        `bold` : bool
            If True, a bold variant is returned, if one exists for the given
            family and size.
        `italic` : bool
            If True, an italic variant is returned, if one exists for the given
            family and size.
        `dpi` : float
            The assumed resolution of the display device, for the purposes of
            determining the pixel size of the font.  Defaults to 96.
    :rtype: `Font`
    """
    ...

if not getattr(sys, 'is_pyglet_doc_run', False):
    _system_font_class = ...
    _user_fonts = ...
def add_file(font: Union[str, BinaryIO]): # -> None:
    """Add a font to pyglet's search path.

    In order to load a font that is not installed on the system, you must
    call this method to tell pyglet that it exists.  You can supply
    either a filename or any file-like object.

    The font format is platform-dependent, but is typically a TrueType font
    file containing a single font face. Note that to use a font added with this method,
    you should pass the face name (not the file name) to :meth::py:func:`pyglet.font.load` or any
    other place where you normally specify a font.

    :Parameters:
        `font` : str or file-like object
            Filename or file-like object to load fonts from.

    """
    ...

def add_directory(directory): # -> None:
    """Add a directory of fonts to pyglet's search path.

    This function simply calls :meth:`pyglet.font.add_file` for each file with a ``.ttf``
    extension in the given directory. Subdirectories are not searched.

    :Parameters:
        `dir` : str
            Directory that contains font files.

    """
    ...

__all__ = ('add_file', 'add_directory', 'add_user_font', 'load', 'have_font')
