"""
This type stub file was generated by pyright.
"""

import threading
from typing import TYPE_CHECKING
from pyglet.media.drivers.base import AbstractAudioPlayer

if TYPE_CHECKING:
    ...
_debug = ...
class PlayerWorkerThread(threading.Thread):
    """Worker thread for refilling players. Exits on interpreter shutdown,
    provides a notify method to interrupt it as well as a termination method.
    """
    _nap_time = ...
    def __init__(self) -> None:
        ...
    
    def run(self) -> None:
        ...
    
    def stop(self) -> None:
        """Stop the thread and wait for it to terminate.

        The `stop` instance variable is set to ``True`` and the rest event
        is set.  It is the responsibility of the `run` method to check
        the value of `_stopped` after each sleep or wait and to return if
        set.
        """
        ...
    
    def notify(self) -> None:
        """Interrupt the current sleep operation.

        If the thread is currently sleeping, it will be woken immediately,
        instead of waiting the full duration of the timeout.
        If the thread is not sleeping, it will run again as soon as it is
        done with its operation.
        """
        ...
    
    def add(self, player: AbstractAudioPlayer) -> None:
        """
        Add a player to the PlayerWorkerThread; which will call
        `work` on it regularly. Notify the thread as well.

        Do not call this method from within the thread, as it will deadlock.
        """
        ...
    
    def remove(self, player: AbstractAudioPlayer) -> None:
        """
        Remove a player from the PlayerWorkerThread, or ignore if it does
        not exist.

        Do not call this method from within the thread, as it may deadlock.
        """
        ...
    


