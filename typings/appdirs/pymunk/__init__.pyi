"""
This type stub file was generated by pyright.
"""

import logging
import math
import warnings
from ._chipmunk_cffi import ffi, lib
from .arbiter import Arbiter
from .contact_point_set import ContactPointSet
from .query_info import PointQueryInfo, SegmentQueryInfo, ShapeQueryInfo
from .vec2d import Vec2d

_logger = ...
@ffi.def_extern()
def ext_cpSpacePointQueryFunc(_shape, point, distance, gradient, data): # -> None:
    ...

@ffi.def_extern()
def ext_cpSpaceSegmentQueryFunc(_shape, point, normal, alpha, data): # -> None:
    ...

@ffi.def_extern()
def ext_cpSpaceBBQueryFunc(_shape, data): # -> None:
    ...

@ffi.def_extern()
def ext_cpSpaceShapeQueryFunc(_shape, _points, data): # -> None:
    ...

@ffi.def_extern()
def ext_cpSpaceShapeIteratorFunc(cp_shape, data): # -> None:
    ...

@ffi.def_extern()
def ext_cpSpaceConstraintIteratorFunc(cp_constraint, data): # -> None:
    ...

@ffi.def_extern()
def ext_cpSpaceBodyIteratorFunc(cp_body, data): # -> None:
    ...

@ffi.def_extern()
def ext_cpSpaceDebugDrawCircleImpl(pos, angle, radius, outline_color, fill_color, data): # -> None:
    ...

@ffi.def_extern()
def ext_cpSpaceDebugDrawSegmentImpl(a, b, color, data): # -> None:
    ...

@ffi.def_extern()
def ext_cpSpaceDebugDrawFatSegmentImpl(a, b, radius, outline_color, fill_color, data): # -> None:
    ...

@ffi.def_extern()
def ext_cpSpaceDebugDrawPolygonImpl(count, verts, radius, outline_color, fill_color, data): # -> None:
    ...

@ffi.def_extern()
def ext_cpSpaceDebugDrawDotImpl(size, pos, color, data): # -> None:
    ...

@ffi.def_extern()
def ext_cpSpaceDebugDrawColorForShapeImpl(_shape, data):
    ...

@ffi.def_extern()
def ext_cpMarchSegmentFunc(v0: ffi.CData, v1: ffi.CData, data: ffi.CData) -> None:
    ...

@ffi.def_extern()
def ext_cpMarchSampleFunc(point: ffi.CData, data: ffi.CData) -> float:
    ...

@ffi.def_extern()
def ext_cpCollisionBeginFunc(_arb: ffi.CData, _space: ffi.CData, data: ffi.CData) -> bool:
    ...

@ffi.def_extern()
def ext_cpCollisionPreSolveFunc(_arb: ffi.CData, _space: ffi.CData, data: ffi.CData) -> bool:
    ...

@ffi.def_extern()
def ext_cpCollisionPostSolveFunc(_arb: ffi.CData, _space: ffi.CData, data: ffi.CData) -> None:
    ...

@ffi.def_extern()
def ext_cpCollisionSeparateFunc(_arb: ffi.CData, _space: ffi.CData, data: ffi.CData) -> None:
    ...

@ffi.def_extern()
def ext_cpBodyPositionFunc(_body: ffi.CData, dt: float) -> None:
    ...

@ffi.def_extern()
def ext_cpBodyVelocityFunc(_body: ffi.CData, gravity: ffi.CData, damping: float, dt: float) -> None:
    ...

@ffi.def_extern()
def ext_cpBodyArbiterIteratorFunc(_body: ffi.CData, _arbiter: ffi.CData, data: ffi.CData) -> None:
    ...

@ffi.def_extern()
def ext_cpBodyConstraintIteratorFunc(cp_body: ffi.CData, cp_constraint: ffi.CData, _: ffi.CData) -> None:
    ...

@ffi.def_extern()
def ext_cpBodyShapeIteratorFunc(cp_body: ffi.CData, cp_shape: ffi.CData, _: ffi.CData) -> None:
    ...

@ffi.def_extern()
def ext_cpConstraintPreSolveFunc(cp_constraint: ffi.CData, cp_space: ffi.CData) -> None:
    ...

@ffi.def_extern()
def ext_cpConstraintPostSolveFunc(cp_constraint: ffi.CData, cp_space: ffi.CData) -> None:
    ...

@ffi.def_extern()
def ext_cpArbiterIteratorFunc(_arbiter, data): # -> None:
    ...

